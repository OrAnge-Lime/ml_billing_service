services:
  db:
    image: postgres:15-alpine 
    container_name: ml_service_db
    volumes:
      - ./postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_USER: ${DB_USER}  
      POSTGRES_PASSWORD: ${DB_PASSWORD}  
      POSTGRES_DB: ${DB_NAME}  
    ports:
      - "${DB_PORT}:${DB_PORT}"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5

  asr_service:
    build:
      context: ./asr_service
      dockerfile: Dockerfile
    container_name: ml_asr_service
    ports:
      - "${ASR_PORT}:${ASR_PORT}"
    volumes:
      - ./asr_service:/asr_service 
      - ./whisper_models_cache_vol:/asr_service/models_cache

    environment:
      MODEL_CACHE_DIRECTORY: ${MODEL_CACHE_DIRECTORY}
      DEFAULT_DEVICE: cuda 
    runtime: nvidia
    command: uvicorn main:app --host 0.0.0.0 --port ${ASR_PORT} --reload 
  
  ui:
    build:
      context: ./streamlit_ui
      dockerfile: Dockerfile 
    container_name: ml_streamlit_ui
    depends_on:
      api: 
        condition: service_started 
    ports:
      - "${UI_PORT}:${UI_PORT}" 
    volumes:
      - ./streamlit_ui:/streamlit_ui
    environment:
      API_HOST: api
      API_PORT: ${API_PORT} 
      STREAMLIT_SERVER_PORT: ${UI_PORT}

    command: ['streamlit', 'run', 'ui_main.py']

  api:
    build: . 
    container_name: ml_service_api
    depends_on:
      db:
        condition: service_healthy
      asr_service: 
        condition: service_started
    ports:
      - "${API_PORT}:${API_PORT}"
    volumes:
      - .:/app

    environment:
      DATABASE_URL: ${DATABASE_URL}
      SECRET_KEY: ${SECRET_KEY}
      ALGORITHM: ${ALGORITHM}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${ACCESS_TOKEN_EXPIRE_MINUTES}
      ASR_SERVICE_URL: http://asr_service:${ASR_PORT}
      ASR_REQUEST_TIMEOUT_SEC: 300

    command: uvicorn main:app --host 0.0.0.0 --port ${API_PORT}

volumes:
  postgres_data: {}
  whisper_models_cache_vol: {}
